{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\devichand\\\\Desktop\\\\intern\\\\home\\\\src\\\\dashboard\\\\calender\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DashboardHeader from '../component/header';\nimport './calender.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Avatar, Divider, TextField } from '@material-ui/core';\nimport myimg from './../imgs/old.JPG';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { Dropdown, Input } from 'semantic-ui-react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Quill from 'quill';\nimport Adminsidebar from '../component/sidebar';\nimport taskcategorydata from './../../dami-data/taskcategory';\n\nconst Calender = () => {\n  _s();\n\n  const [newtaskname, setnewtaskname] = useState(undefined);\n  const [newtasklocation, setnewtasklocation] = useState(\" \");\n  const [newtaskdescription, setnewtaskdescription] = useState(\" \");\n  const [newtaskassign, setnewtaskassign] = useState(\" \");\n  const [newtaskcategory, setnewtaskcategory] = useState(\" \");\n  const [newtaskfstdate, setnewtaskfstdate] = useState(\" \");\n  const calenderevents = [{\n    title: 'event 1',\n    date: '2020-12-11'\n  }, {\n    title: 'event 1',\n    date: '2020-12-11'\n  }, {\n    title: 'event 2',\n    date: '2020-12-12'\n  }];\n  const [tasks, settasks] = useState(calenderevents);\n  const [opencreatetaskmodel, setopencreatetaskmodel] = useState(false);\n  const [quilltext, setquilltext] = useState('');\n\n  const handlequillChange = e => {\n    setquilltext(e);\n    setnewtaskdescription(e);\n  };\n\n  const options = [{\n    key: 1,\n    text: 'Rakesh',\n    value: 1\n  }, {\n    key: 2,\n    text: 'Mohan',\n    value: 2\n  }, {\n    key: 3,\n    text: 'SOhan',\n    value: 3\n  }];\n\n  const handlecreatetask = () => {\n    settasks([...tasks, {\n      title: newtaskname,\n      date: newtaskfstdate\n    }]);\n    setopencreatetaskmodel(false);\n  };\n\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task_calview\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: myimg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: eventInfo.event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  };\n\n  const backbutton = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 21\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin_dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Adminsidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin_right\",\n          children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calender_dash\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskboard_heading\",\n              children: \"Calender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calender_body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calender_left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setopencreatetaskmodel(true),\n                  className: \"create_task\",\n                  children: \"+ Create New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"exist_task\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"exist_tasktop\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \" Drag and drop your event or click in the calendar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 22\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"exist_taskbody\",\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: taskcategorydata.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n                        style: {\n                          backgroundColor: `${task.backgroundColor}`,\n                          color: \"black\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"task_dot\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"task_info\",\n                          children: [task.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [task.tasks, \" Task\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 63\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calender_right\",\n                children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n                  plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                  dateClick: () => setopencreatetaskmodel(true),\n                  eventContent: renderEventContent,\n                  themeSystem: true,\n                  droppable: false,\n                  height: 550,\n                  buttonIcons: {\n                    prev: backbutton\n                  },\n                  eventBackgroundColor: \"#fff\",\n                  eventBorderColor: \"#fff\",\n                  className: \"fullcalender\",\n                  headerToolbar: {\n                    left: 'prev,next, mybtn',\n                    center: 'title',\n                    right: 'dayGridMonth,dayGridWeek,timeGridDay'\n                  },\n                  bootstrapFontAwesome: tru,\n                  initialView: \"dayGridMonth\",\n                  selectable: true,\n                  selectMirror: true,\n                  dayMaxEvents: false,\n                  events: tasks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), opencreatetaskmodel ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_taskmodel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task_modeltop\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          fluid: true,\n          onChange: e => setnewtaskname(e.target.value),\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          fluid: true,\n          onChange: e => setnewtasklocation(e.target.value),\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Event Time Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_modeldates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task_modeldate\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"From\",\n              type: \"date\",\n              onChange: e => setnewtaskfstdate(e.target.value),\n              defaultValue: \"11/11/1111\",\n              format: \"MM/dd/yyyy\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task_modeldate\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"To\",\n              type: \"date\",\n              defaultValue: \"11/11/1111\",\n              format: \"MM/dd/yyyy\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          value: quilltext,\n          height: 200,\n          onChange: handlequillChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Assign Someone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          fluid: true,\n          options: options,\n          placeholder: \"Choose an option\",\n          selection: true,\n          onChange: e => setnewtaskassign(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Choose a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_modeltag\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setnewtaskcategory('cat1'),\n            children: \"cat1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setnewtaskcategory('cat2'),\n            children: \"cat2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setnewtaskcategory('cat3'),\n            children: \"cat3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setnewtaskcategory('cat4'),\n            children: \"cat4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setnewtaskcategory('cat5'),\n            children: \"cat5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task_model_btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlecreatetask,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setopencreatetaskmodel(false),\n          children: \"Cencal \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this) : \"\", newtaskfstdate]\n  }, void 0, true);\n};\n\n_s(Calender, \"7XCwLCaX5e2s+1fJkvR7y6Ql8uM=\");\n\n_c = Calender;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["C:/Users/devichand/Desktop/intern/home/src/dashboard/calender/index.js"],"names":["React","useState","DashboardHeader","FullCalendar","dayGridPlugin","interactionPlugin","Avatar","Divider","TextField","myimg","timeGridPlugin","Dropdown","Input","ReactQuill","Quill","Adminsidebar","taskcategorydata","Calender","newtaskname","setnewtaskname","undefined","newtasklocation","setnewtasklocation","newtaskdescription","setnewtaskdescription","newtaskassign","setnewtaskassign","newtaskcategory","setnewtaskcategory","newtaskfstdate","setnewtaskfstdate","calenderevents","title","date","tasks","settasks","opencreatetaskmodel","setopencreatetaskmodel","quilltext","setquilltext","handlequillChange","e","options","key","text","value","handlecreatetask","renderEventContent","eventInfo","event","backbutton","map","task","backgroundColor","color","name","prev","left","center","right","tru","target","shrink"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport DashboardHeader from '../component/header'\r\nimport './calender.css'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { Avatar, Divider, TextField} from '@material-ui/core'\r\nimport myimg from './../imgs/old.JPG'\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport { Dropdown, Input } from 'semantic-ui-react'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Quill from 'quill'\r\nimport Adminsidebar from '../component/sidebar'\r\nimport taskcategorydata from './../../dami-data/taskcategory'\r\n\r\n\r\nconst Calender = () => {\r\nconst [newtaskname, setnewtaskname] = useState(undefined);\r\nconst [newtasklocation, setnewtasklocation] = useState(\" \");\r\nconst [newtaskdescription, setnewtaskdescription] = useState(\" \");\r\nconst [newtaskassign, setnewtaskassign] = useState(\" \");\r\nconst [newtaskcategory, setnewtaskcategory] = useState(\" \");\r\nconst [newtaskfstdate, setnewtaskfstdate] = useState(\" \");\r\n\r\nconst calenderevents=[\r\n    { title: 'event 1', date: '2020-12-11' },\r\n    { title: 'event 1', date: '2020-12-11' },\r\n    { title: 'event 2', date: '2020-12-12' }\r\n]\r\nconst [tasks, settasks] = useState(calenderevents)\r\n   const [opencreatetaskmodel, setopencreatetaskmodel] = useState(false)\r\n  const [quilltext, setquilltext] = useState('')\r\nconst handlequillChange=(e)=>{\r\n    setquilltext(e);\r\n    setnewtaskdescription(e);\r\n\r\n}\r\n\r\nconst options = [\r\n    { key: 1, text: 'Rakesh', value: 1 },\r\n    { key: 2, text: 'Mohan', value: 2 },\r\n    { key: 3, text: 'SOhan', value: 3 },\r\n  ]\r\n  const handlecreatetask=()=>{\r\n    settasks(\r\n        [\r\n             ...tasks, {title:newtaskname, date: newtaskfstdate}\r\n         ]);\r\n         setopencreatetaskmodel(false)\r\n         \r\n        \r\n  }\r\nconst renderEventContent =(eventInfo)=> {\r\n    return (\r\n      <>\r\n       <div className=\"task_calview\">\r\n           \r\n            <Avatar src={myimg} />\r\n            <span>{eventInfo.event.title}</span>\r\n       </div>\r\n      </>\r\n    )\r\n  }\r\n  const backbutton= <h1>hh</h1>\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <div className=\"admin_dashboard\">\r\n              <Adminsidebar/>\r\n                <div className=\"admin_right\">\r\n           <DashboardHeader/>\r\n           <div className=\"calender_dash\">\r\n               <div className=\"taskboard_heading\">\r\n                  Calender\r\n               </div>\r\n               <div className=\"calender_body\">\r\n               <div className=\"calender_left\">\r\n                    <div onClick={()=>setopencreatetaskmodel(true)} className=\"create_task\">\r\n                        + Create New\r\n                    </div>\r\n                    <div className=\"exist_task\">\r\n                        <div className=\"exist_tasktop\">\r\n                     <span> Drag and drop your event or click in the calendar</span> \r\n                        </div>\r\n                        <div className=\"exist_taskbody\">\r\n                          <ul>\r\n                         \r\n                              {taskcategorydata.map((task)=>( <li style={{backgroundColor:`${task.backgroundColor}`, color:\"black\"}}>\r\n                                    <div className=\"task_dot\">\r\n\r\n                                    </div>\r\n                                    <div className=\"task_info\">\r\n                                        {task.name}\r\n                                        <span>{task.tasks} Task</span>\r\n                                    </div>\r\n                                </li>))\r\n                              }\r\n                          </ul>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"calender_right\">\r\n                <FullCalendar\r\n        plugins={[ dayGridPlugin,  timeGridPlugin,interactionPlugin ]}\r\n        dateClick={()=>setopencreatetaskmodel(true)}\r\n        eventContent={renderEventContent}\r\n        themeSystem\r\n        droppable={false}\r\n        height={550}\r\n        buttonIcons={{\r\n            prev:backbutton\r\n        }}\r\n        eventBackgroundColor=\"#fff\"\r\n        eventBorderColor=\"#fff\"\r\n        className=\"fullcalender\"\r\n        headerToolbar={{\r\n              left: 'prev,next, mybtn',\r\n              center: 'title',\r\n              right: 'dayGridMonth,dayGridWeek,timeGridDay'\r\n            }}\r\n      bootstrapFontAwesome={tru}\r\n        initialView=\"dayGridMonth\"\r\n       \r\n        selectable={true}\r\n        \r\n        selectMirror={true}\r\n        dayMaxEvents={false}\r\n       \r\n        events={tasks}\r\n      />\r\n                </div>\r\n               </div>\r\n               </div>\r\n             </div>\r\n             </div>\r\n        </div>\r\n           {opencreatetaskmodel? \r\n           <div className=\"create_taskmodel\">\r\n          <div className=\"task_modeltop\"> \r\n               <span>Task Name</span> \r\n                    <Input fluid onChange={(e)=>setnewtaskname(e.target.value)} placeholder='Search...' /> \r\n                    <span>Location</span>\r\n                    <Input fluid onChange={(e)=>setnewtasklocation(e.target.value)} placeholder='Search...' />\r\n                    <span>Event Time Range</span>\r\n                 <div className=\"task_modeldates\">\r\n                   <div className=\"task_modeldate\">\r\n                   <TextField\r\n      \r\n        label=\"From\"\r\n        type=\"date\"\r\n        onChange={(e)=>setnewtaskfstdate(e.target.value)}\r\n        defaultValue=\"11/11/1111\"\r\n        format=\"MM/dd/yyyy\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      /> \r\n      </div> \r\n      <div className=\"task_modeldate\">\r\n      <TextField\r\n      \r\n      label=\"To\"\r\n      type=\"date\"\r\n      \r\n      defaultValue=\"11/11/1111\"\r\n      format=\"MM/dd/yyyy\"\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n    /></div></div>\r\n                    \r\n                    <span>Description</span> \r\n                    <ReactQuill \r\n                    value={quilltext}\r\n                    height={200}\r\n                    onChange={handlequillChange}\r\n                     />\r\n                 \r\n              \r\n                    <span>Assign Someone</span> \r\n                    <Dropdown\r\n                fluid\r\n                options={options}\r\n                placeholder='Choose an option'\r\n                selection\r\n                onChange={(e)=>setnewtaskassign(e.target.value)}\r\n               \r\n              />\r\n                    <span>Choose a category</span> \r\n                    <div className=\"task_modeltag\">\r\n                        <li onClick={()=>setnewtaskcategory('cat1')}>cat1</li>\r\n                        <li onClick={()=>setnewtaskcategory('cat2')}>cat2</li>\r\n                        <li onClick={()=>setnewtaskcategory('cat3')}>cat3</li>\r\n                        <li onClick={()=>setnewtaskcategory('cat4')}>cat4</li>\r\n                        <li onClick={()=>setnewtaskcategory('cat5')}>cat5</li>\r\n                    </div>\r\n          </div>\r\n                <Divider/>\r\n                  <div className=\"task_model_btns\">\r\n                  <button onClick={handlecreatetask}>Create</button>\r\n                  <button onClick={()=> setopencreatetaskmodel(false)}>Cencal </button>\r\n                  </div>\r\n            </div> :\"\"}\r\n     {newtaskfstdate}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Calender\r\n"]},"metadata":{},"sourceType":"module"}